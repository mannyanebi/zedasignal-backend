# Generated by Django 4.2.4 on 2023-10-23 06:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bot",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, help_text="Unique identifier for this object.", unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="The name of this bot.", max_length=255, null=True, verbose_name="name"
                    ),
                ),
                (
                    "min_investment_amount",
                    models.CharField(
                        blank=True,
                        help_text="The min investment amount of this bot.",
                        max_length=255,
                        null=True,
                        verbose_name="min investment amount",
                    ),
                ),
                (
                    "max_investment_amount",
                    models.CharField(
                        blank=True,
                        help_text="The max investment amount of this bot.",
                        max_length=255,
                        null=True,
                        verbose_name="max investment amount",
                    ),
                ),
                (
                    "performance_fee",
                    models.CharField(
                        blank=True,
                        help_text="The performance fee of this bot.",
                        max_length=255,
                        null=True,
                        verbose_name="performance fee",
                    ),
                ),
                (
                    "overall",
                    models.CharField(
                        blank=True,
                        help_text="The overall of this bot.",
                        max_length=255,
                        null=True,
                        verbose_name="overall",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Designates whether this bot is active.", verbose_name="is active"
                    ),
                ),
                (
                    "is_top_performing",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this bot is top performing.",
                        verbose_name="is top performing",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPlanPromo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, help_text="Unique identifier for this object.", unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of this subscription plan promo.",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, help_text="Unique identifier for this object.", unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of this subscription plan.",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "yearly_price",
                    models.CharField(
                        blank=True,
                        help_text="The yearly price of this subscription plan.",
                        max_length=255,
                        null=True,
                        verbose_name="yearly price",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of this subscription plan.",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this subscription plan is active.",
                        verbose_name="is active",
                    ),
                ),
                (
                    "is_special",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this subscription plan is special.",
                        verbose_name="is special",
                    ),
                ),
                (
                    "button_cta",
                    models.CharField(
                        blank=True,
                        help_text="The button cta of this subscription plan.",
                        max_length=255,
                        null=True,
                        verbose_name="button cta",
                    ),
                ),
                (
                    "promos",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The promos of this subscription plan.",
                        to="trading.subscriptionplanpromo",
                        verbose_name="promos",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CopyTradingGuide",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, help_text="Unique identifier for this object.", unique=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of this copy trading guide.",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="copy_trading_guides",
                        to="trading.bot",
                        verbose_name="bot",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccountScreeningRequest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, help_text="Unique identifier for this object.", unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the user requesting for account screening.",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="The email of the user requesting for account screening.",
                        max_length=255,
                        null=True,
                        verbose_name="email",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="The phone number of the user requesting for account screening.",
                        max_length=255,
                        null=True,
                        verbose_name="phone number",
                    ),
                ),
                (
                    "schedule_date",
                    models.DateField(
                        blank=True,
                        help_text="The schedule date of the user requesting for account screening.",
                        null=True,
                        verbose_name="schedule date",
                    ),
                ),
                (
                    "schedule_time",
                    models.TimeField(
                        blank=True,
                        help_text="The schedule time of the user requesting for account screening.",
                        null=True,
                        verbose_name="schedule time",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_screening_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
